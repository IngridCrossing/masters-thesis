model{ #("JAGS_Marginalized_Time.jags")
   phi.alpha ~ dnorm(6, 1) #Intercept for daily survival as a function of year
   phi.beta ~ dnorm(0, ((1/2.71)^2))  #Additional survival probability when infected
	
  p.I.c ~ dunif(0,1) #prob of detection when infected (Alive)
	p.S.c ~ dunif(0,1) #prob of detection when uninfected/susceptible (Alive)

	p.I.D.c ~ dunif(0,1) #prob of detection when dead and infected
	p.S.D.c ~ dunif(0,1) #prob of detection when dead and uninfected
	b.I.c ~ dunif(0,1) #prob of becoming infected, given you are susceptible
	b.S.c ~ dunif(0,1) #prob of recovering from an infection/ probability of becoming susceptible, given infected

	logit(phi.I.c) <- phi.alpha + phi.beta  #Survival for infected individuals
  logit(phi.S.c) <- phi.alpha #Survival for uninfected/susceptible individuals
  
  
    for(t in 1:Nint){  #Nint is the number of sampling intervals
  phi.I[t] <- phi.I.c^intervalLength[t] #prob of surv when infected
	phi.S[t] <- phi.S.c^intervalLength[t] #prob of surv when uninfected/susceptible
	
  p.I[t] <- p.I.c ##prob of detection when infected (Alive)
	p.S[t] <- p.S.c ##prob of detection when uninfected/susceptible (Alive)
	
	p.I.D[t] <- p.I.D.c  #prob of detection when dead and infected
	p.S.D[t] <- p.S.D.c  #prob of detection when dead and uninfected
	b.I[t] <- 1-(1-b.I.c)^intervalLength[t]  #prob of becoming infected
	b.S[t] <- 1-(1-b.S.c)^intervalLength[t]  #prob of recovering from an infection/ probability of becoming susceptible
	
	# states in ecological process
    omega[1,1,t] <- phi.S[t] * (1-b.I[t])
	omega[1,2,t] <- phi.S[t] *b.I[t]
	omega[1,3,t] <- (1-phi.S[t]) * (1-b.I[t])
	omega[1,4,t] <- (1-phi.S[t]) * b.I[t]
	omega[2,1,t] <- phi.I[t]*b.S[t]
	omega[2,2,t] <- phi.I[t]*(1-b.S[t])
	omega[2,3,t] <- (1-phi.I[t])*b.S[t]
	omega[2,4,t] <- (1-phi.I[t]) *(1-b.S[t])
	omega[3,1,t] <- 0
	omega[3,2,t] <- 0
	omega[3,3,t] <- 1
	omega[3,4,t] <- 0
	omega[4,1,t] <- 0
	omega[4,2,t] <- 0
	omega[4,3,t] <- 0
	omega[4,4,t] <- 1
	# states in observation process
    rho[1,1,t] <- p.S[t]
	rho[1,2,t] <- 0
	rho[1,3,t] <- 0
	rho[1,4,t] <- 0
	rho[1,5,t] <- (1-p.S[t])
	rho[2,1,t] <- 0
	rho[2,2,t] <- p.I[t]
	rho[2,3,t] <- 0
	rho[2,4,t] <- 0
	rho[2,5,t] <- (1-p.I[t])
	rho[3,1,t] <- 0
	rho[3,2,t] <- 0
	rho[3,3,t] <- p.S.D[t]
	rho[3,4,t] <- 0
	rho[3,5,t] <- (1-p.S.D[t])
	rho[4,1,t] <- 0
	rho[4,2,t] <- 0
	rho[4,3,t] <- 0
	rho[4,4,t] <- p.I.D[t]
	rho[4,5,t] <- (1-p.I.D[t])
    }
    for(i in 1:NCH){
    zeta[i,sumf[i],1] <- 1 #value when an uninfected individual is alive
    zeta[i,sumf[i],2] <- 1 #value when an infected/susceptible individual is alive
	zeta[i,sumf[i],3] <- 0 #value when an uninfected individual is dead
	zeta[i,sumf[i],4] <- 0 #value when an infected/susceptible individual is dead
    for(t in sumf[i]:(Nint)){
    zeta[i,(t+1),1] <- inprod(zeta[i,t,], omega[,1,t]) * rho[1,State.index[i,(t+1)],t]
    zeta[i,(t+1),2] <- inprod(zeta[i,t,], omega[,2,t]) * rho[2,State.index[i,(t+1)],t]
	zeta[i,(t+1),3] <- inprod(zeta[i,t,], omega[,3,t]) * rho[3,State.index[i,(t+1)],t]
	zeta[i,(t+1),4] <- inprod(zeta[i,t,], omega[,4,t]) * rho[4,State.index[i,(t+1)],t]
    }
    lik[i] <- sum(zeta[i,(Nint+1),])
    ones[i] ~ dbin(lik[i], FR[i])
    }
    }